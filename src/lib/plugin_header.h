/*
 * gen_fsm_header.h
 *
 *  Created on: 7 oct. 2016
 *  Created by: Huu Nghia NGUYEN <huunghia.nguyen@montimage.com>
 *
 *  This is header of a plugin generated by main_gen_plugin.
 *  A plugin contains the encoding of one or many rules.
 */

#ifndef SRC_LIB_PLUGIN_HEADER_H_
#define SRC_LIB_PLUGIN_HEADER_H_
#include <stdint.h>
#include <stdint.h>
#include <string.h>
#include <sys/time.h>

#include "message_t.h"
#include "mmt_array_t.h"

typedef struct proto_attribute_struct{
	const char *proto;
	const char *att;
	uint32_t proto_id;
	uint32_t att_id;
	int data_type; //NUMERIC, STRING
}proto_attribute_t;


/**
 * Information of a rule in generated lib
 */
typedef struct rule_info_struct{
	uint32_t id;
	/** rule type */
	int type_id;
	/** rule type that is either "attack", "security", "test", "evasion"*/
	const char *type_string;
	/** number of events existing in the rules  */
	uint8_t events_count;
	/**
	 * Description of the rule
	 */
	const char *description;
	/** a command to be executed when a rule is satisfied */
	const char *if_satisfied;
	/** a command to be executed when a rule is not satisfied */
	const char *if_not_satisfied;

	/** Size of #proto_atts */
	size_t proto_atts_count;
	/** Array of protocols and their attributes being used in this rule */
	const proto_attribute_t *proto_atts;
	/**
	 * Each array represents detail protocols and their attributes of each event.
	 */
	const mmt_array_t *proto_atts_events;

	/** Create a FSM instance */
	void* (* create_instance )();

	/** Create an internal struct using by guard of FSM above, e.g., _msg_t_1 */
	void* (* convert_message )( const message_t * message);

	/**
	 * - Return:
	 * 	+ a hash number.
	 */
	uint64_t (* hash_message )( const void *data );
}rule_info_t;

/**
 * Get information of rules in generated library
 * - Output
 * 	+ rules_arr
 * - Return
 * 	+ number of rules
 */
size_t mmt_sec_get_plugin_info( const rule_info_t **plugins_arr );


#endif /* SRC_LIB_PLUGIN_HEADER_H_ */
