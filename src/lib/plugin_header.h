/*
 * gen_fsm_header.h
 *
 *  Created on: 7 oct. 2016
 *  Created by: Huu Nghia NGUYEN <huunghia.nguyen@montimage.com>
 *
 *  This is header of a plugin generated by main_gen_plugin.
 *  A plugin contains the encoding of one or many rules.
 */

#ifndef SRC_LIB_PLUGIN_HEADER_H_
#define SRC_LIB_PLUGIN_HEADER_H_
#include <stdint.h>
#include <stdint.h>
#include <string.h>
#include <sys/time.h>

#include "message_t.h"
#include "mmt_array_t.h"

typedef struct proto_attribute_struct{
	const char *proto;
	const char *att;
	uint32_t proto_id;
	uint32_t att_id;
	/**
	 * Data type defined by MMT-Security such as NUMERIC, STRING
	 */
	int data_type;
	/**
	 * data type defined by MMT-DPI such as MMT_U8_DATA, MMT_DATA_IP_ADDR, ...
	 */
	int dpi_type;
}proto_attribute_t;

/**
 * Information of the moment the rules was created
 */
typedef struct rule_version_info_struct{
	/**
	 * Moment C code of the rule was generated
	 */
	time_t created_date;
	/**
	 * A hash string represent GIT version of source code from that the rule_compile was created
	 */
	const char *hash;
	/**
	 * Version number in string format, e.g., 1.2.18
	 */
	const char *number;
	/**
	 * A number represent the number string above, e.g., 56
	 * A recent version must has an index that is greater than the one of older version
	 */
	uint32_t index;
	/**
	 * Version string of MMT-DPI
	 */
	const char *dpi;
}rule_version_info_t;

/**
 * Information of a rule in generated lib
 */
typedef struct rule_info_struct{
	uint32_t id;
	/** rule type */
	int type_id;
	/** rule type that is either "attack", "security", "test", "evasion"*/
	const char *type_string;
	/** number of events existing in the rules  */
	uint8_t events_count;
	/**
	 * Description of the rule
	 */
	const char *description;
	/** a command to be executed when a rule is satisfied */
	const char *if_satisfied;
	/** a command to be executed when a rule is not satisfied */
	const char *if_not_satisfied;

	/** Size of #proto_atts */
	size_t proto_atts_count;
	/** Array of protocols and their attributes being used in this rule */
	const proto_attribute_t *proto_atts;
	/**
	 * Each array represents detail protocols and their attributes of each event.
	 */
	const mmt_array_t *proto_atts_events;

	/** Create a FSM instance */
	void* (* create_instance )();

	/**
	 * Create an internal struct using by guard of FSM above, e.g., _msg_t_1
	 *
	 * This function is thread-safe
	 */

	const void* (* convert_message )( const message_t * message);

	/**
	 * Size of message returned by #convert_message
	 */
	const size_t message_size;

	/**
	 * - Return:
	 * 	+ a hash number.
	 * This function is thread-safe
	 */
	uint64_t (* hash_message )( const void *data );

	/**
	 * Information at the moment the rule was created
	 */
	const rule_version_info_t version;
}rule_info_t;

/**
 * Get information of rules in generated library
 * - Output
 * 	+ rules_arr
 * - Return
 * 	+ number of rules
 */
size_t mmt_sec_get_plugin_info( const rule_info_t **plugins_arr );


#endif /* SRC_LIB_PLUGIN_HEADER_H_ */
