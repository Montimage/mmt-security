<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="properties.xsl"?>
<!-- MMT_Security Copyright (C) 2014  Montimage-->
<beginning>
	<!-- Simple multi-session, multi-probe property -->
	
<embedded_functions><![CDATA[

#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <inttypes.h>
#include "types_defs.h"
#include "hiredis/hiredis.h"
#include <sys/time.h>


/**
* Return:
* - 0: ok
* - 1: invalid
* - 2: NULL
*/


static inline int em_check_nfs_redis(const char *p_payload){
	//printf("entering the EM\n");
	//return 0;
	
    if(p_payload == NULL){
    return 2;
  }
  
  //printf("Payload: %s. Payload len: %4.3f\n", p_payload, payload_len);
  
  
  redisContext *c, *command;
  redisReply *reply;
  
  const char *hostname = "127.0.0.1";
  //const char *hostname = "192.168.0.37";
  int port = 6379;
  
  struct timeval timeout = { 1, 500000 }; // 1.5 seconds
  c = redisConnectWithTimeout(hostname, port, timeout);
  if (c == NULL || c->err) {
        if (c) {
            printf("Connection error: %s\n", c->errstr);
            redisFree(c);
        } else {
            printf("Connection error: Impossible to allocate redis context\n");
        }
        exit(0);
    }
  
    /* Let's check what we have inside the list */
    reply = redisCommand(c,"LRANGE multisession.report 0 -1");
    if (reply->type == REDIS_REPLY_ARRAY) {
 		int j=0;
        for (j = 0; j < reply->elements; j++) {
			//printf("report: %s\n", reply->element[j]->str);
            char probe_report[256];
            char *token;
            strcpy(probe_report, reply->element[j]->str);
            token = strtok(reply->element[j]->str, ",");
            int i = 0;
			while (token != NULL) {
				//printf("Token:%s\n", token);
				if (i==1) {
					//check the validity of the report
					struct timeval now;
					gettimeofday(&now, NULL);
					double element_ts = atof(token);
					//printf("Timestamp: %4.4f\n", element_ts);
					if (now.tv_sec - element_ts > 300) {
							redisCommand(c,"LREM multisession.report 1 %s", probe_report);
							//printf("Delete the outdated report %s\n", probe_report);
							i++;
							break;
							}
					}
				if (i==2){
					if (token[0] == ' '){
					//printf("NULL report\n");
					break;
					}
					//printf("Filename: %s\n", token);
					if (strstr(p_payload, token) != NULL){
					//printf ("Detected\n");
					redisFree(c);
					return 1;
					}        
					}
				token = strtok(NULL, ",");
				i++;
				}
			    
        }
    }
  redisFree(c);
  return 0;
}
/*
static inline int em_ipcheck(const char *ip_src, const char *server_addr){
printf("Ip source: %s, IP server: %s\n", ip_src, server_addr);
return 1;
}
*/
]]></embedded_functions>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="1" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="2" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="3" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="4" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="5" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="6" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="7" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="8" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="9" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="10" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="11" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="12" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="13" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="14" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="15" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="16" type_property="ATTACK" 
    description="Upload a file comming from NFS server (detection based on two probes)">
    <event value="COMPUTE" event_id="1" 
           description="Context: HTTP packet"
           boolean_expression="((ip.src == ip.server_addr) &amp;&amp; ((http.packet_count != 0) &amp;&amp; (tcp.payload_len != 0)))"/>
    <event value="COMPUTE" event_id="2" 
           description="Trigger: HTTP payload contains the file comming from NFS server"
           boolean_expression="(#em_check_nfs_redis(tcp.p_payload) == 1)"/>
</property>

</beginning>
