<beginning>
<embedded_functions><![CDATA[
#include <sqlite3.h> 

static inline int em_check_malicious_UA_sqlite(const char * UA){
   	int handle = 0;
   	sqlite3 *db;
        char *zErrMsg = 0;
        int rc;
        char *sql = malloc(sizeof(char) * (strlen(UA) + 64));
        const char* data = "Callback function called";
   
    int callback(void *data, int argc, char **argv, char **azColName){
  	if (argc > 0) handle = 1;
	return handle;
	}
    
    rc = sqlite3_open("test/hoa/db_blacklisted_UA.sqlite", &db);
    if( rc ){
      	fprintf(stderr, "Can't open database: %s\n", sqlite3_errmsg(db));
      	return 2;
      	}
  	
    /* Create SQL statement */
    sprintf(sql, "SELECT * FROM blacklisted_UA WHERE UA = \"%s\"", UA);
    rc = sqlite3_exec(db, sql, callback, (void*)data, &zErrMsg);
    if( rc != SQLITE_OK ){
    	fprintf(stderr, "SQL error: %s\n", zErrMsg);
      	sqlite3_free(zErrMsg);
   	}
   sqlite3_close(db);
   free(sql);
   return handle;
  }
]]></embedded_functions>

<!-- Property 37: Detection of robot, crawler, spider, spam and bad bot based on blacklisted User-Agent strings (SQLite approach). 
528 signatures from the source: http://www.user-agents.org/ -->
<!-- Attention: Compile this rule with -lsqlite3 option. E.g., ./compile_rule rules/rule.so test/properties_all/37.robot.user_agent.xml -lsqlite3  -->
<property value="THEN" delay_units="ms" delay_min="0" delay_max="0" property_id="37" type_property="ATTACK" 
    description="Detection of robot, crawler, spider, spam and bad bot based on blacklisted User-Agent strings (hash-table)">
    <event value="COMPUTE" event_id="1" 
           description="HTTP User-Agent string representing robot, crawler, spider, spam and bad bot"
           boolean_expression="(#em_check_malicious_UA_sqlite(http.user_agent) == 1)"/>
    <event value="COMPUTE" event_id="2" 
           description="HTTP GET"
           boolean_expression="((http.method == 'GET') &amp;&amp; (ip.src != ip.dst))"/> 
</property>
</beginning>


