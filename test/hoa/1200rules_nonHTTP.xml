<!--This file is repeated from hoa/400rules_nonHTTP.xml -->

<!-- ================LOOP 0 ==================-->

<beginning>

<embedded_functions><![CDATA[
//each function name should be prefixed by em_

#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <inttypes.h>
#include "types_defs.h"

static inline int check_ip_options(const char *op2, const char *op1){
  int handle = 0;
  
  int i2 = *((int*)op2);
  int i1 = *((int*)op1);
  int bit2 = (i2 >> 1) & 1;
  int bit1 = (i1 >> 1) & 1;
//  if(bit2 == 1 || bit1 == 1){
      if(i2 != i1) handle = 1;
//  }
  return handle;
}


static inline int check_port(int i){
  
  //printf("Port:%d\n", i);
  //according to: 
  //https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers
  //and
  //https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.txt

  if(i<1023) return 0;
  if(i>49151 && i< 65536) return 0;
  if(i>65535) return 1;

  if(i>2193 && i<2197) return 1;
  if(i>4488 && i<4500) return 1;
  if(i>4953 && i<4969) return 1;
  if(i>5569 && i<5573) return 1;
  if(i>5646 && i<5670) return 1;
  if(i>6657 && i<6665) return 1;
  if(i>7491 && i<7500) return 1;
  if(i>7784 && i<7790) return 1;
  if(i>27999 && i<28119) return 1;
  if(i>5554 && i<5558) return 1;
  if(i>5999 && i<6064) return 1;
  if(i>8615 && i<8665) return 1;
  if(i>8801 && i<8804) return 1;
  if(i>8887 && i<8891) return 1;
  if(i>11430 && i<11489) return 1;
  if(i>11623 && i<11720) return 1;
  if(i>27009 && i<27345) return 1;
  if(i>41797 && i<42508) return 1;
  if(i>44444 && i<44544) return 1;
  switch (i) {
    case 78:
    case 79:
    case 100:
    case 106:
    case 787:
    case 1053:
    case 1491:
    case 2662:
    case 3060:
    case 3131:
    case 3145:
    case 3300:
    case 3301:
    case 4045:
    case 4315:
    case 4443:
    case 4967:
    case 5151:
    case 5152:
    case 5162:
    case 5444:
    case 5555:
    case 5556:
    case 6100:
    case 6200:
    case 6501:
    case 8882:
    case 9001:
    case 6632:
    case 7001:
    case 7002:
    case 7005:
    case 7011:
    case 7012:
    case 7501:
    case 7777:
    case 8001:
    case 16000:
    case 49151:
      return 1;
    default:
      return 0;
  }
  return 0;
}

/**
* Return:
* - 0: ok
* - 1: invalid
* - 2: NULL
*/
static inline int check_URI(const char *uri_str){
  int handle = 0;
  if(uri_str == NULL){
    return 2;
  }
 
  const char *x = uri_str;
  
  //fprintf(stderr, "%s\n",x);
  while (*x != '\0'){
      //octets 0-32 (0-20 hex) | "\" | """ | "&" | "<" | ">" | "[" | "]" | "^" | "`" | "{" | "|" | "}" | "~" | octets 127-255 (7F-FF hex)
      if(*x < 32 || *x == 92 || *x == '"' || *x == '<' || *x == '>' || *x == '[' || *x == ']' || *x == '^' || *x == '`' || *x == '{' || 
         *x == '|' || *x == '}' || *x == '%' || *x > 126) {
              handle = 1;
              break;
      }
      x = x+1;
  }
  //detect directory traversal attack
  char *s0, *s1, *s2, *s3;
  s0 = strstr(uri_str, ".."); //find the first occurrence of string ".." in string
  s1 = strstr(uri_str, "./"); //find the first occurrence of string "./" in string
  s2 = strstr(uri_str, "//"); //find the first occurrence of string "//" in string
  s3 = strstr(uri_str, "/."); //find the first occurrence of string "//" in string
  
  if ((s0 !=NULL) || (s1 !=NULL) || (s2 !=NULL) || (s3 !=NULL))  
   handle = 1;
   
//#ifdef DEBUG
//  fprintf(stderr, "executing ceck_URI with parameters:h=%d:nb=%u:a1=%o:a2=%o\n", 
//                                           handle, *(char*)(BLOC3+6),*(char*)(BLOC3+9));
//#endif
  return handle;
}

/*
 * Nikto 
 */
static inline bool check_UA( const char *user_agent){
   //find the first occurrence of string "Nikto" in string
   return (strstr(user_agent, "Nikto") != NULL);     
}
static inline int check_sql_injection(const void *p_payload, double payload_len){
   int key_word_len = 6;
   char *key_words[6] = {"DROP", "UNION", "SELECT", "CHAR", "DELETE", "INSERT"};
   size_t len = payload_len, i;
   char *str  = malloc( len + 1 );
   memcpy( str, p_payload, len );
   str[ len ] = '\0';
   
   //Signature based dection begin here. 
   //(using  pattern matching techniques against signatures and 
   //keyword-based stores to identify potentially malicious requests)
   for( i=0; i<key_word_len; i++)
      if( strstr(str, key_words[i]  ) != NULL ){
         free( str );
         return 1;
      }
      
   
   free( str );
   return 0;
}


int check_http_response(const char* p){
  if(p == NULL){
    return 1;
  }
  return 0;
}

int check_ip_add(const char *src, const char *dst, const char *src1, const char *dst1){
  if((src == NULL) || (dst == NULL) || (src1 == NULL) || (dst1 == NULL)){
    return 1;
  }
  if (((src = src1) && (dst = dst1)) || ((src = dst1) && (dst = src1))){
     return 1;
  }
  return 0;
}

]]></embedded_functions>



<property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "2" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "3" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "4" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "5" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "6" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "7" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "8" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "9" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "10" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "11" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "12" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "13" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "14" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "15" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "16"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "17" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "18" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "19" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "20" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "21" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "22" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "23" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "24" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "25" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "26" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "27" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "28" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "29" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "30" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "31" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "32"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "33" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "34" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "35" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "36" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "37" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "38" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "39" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "40" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "41" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "42" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "43" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "44" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "45" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "46" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "47" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "48"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "49" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "50" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "51" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "52" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "53" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "54" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "55" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "56" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "57" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "58" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "59" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "60" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "61" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "62" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "63" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "64"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "65" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "66" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "67" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "68" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "69" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "70" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "71" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "72" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "73" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "74" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "75" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "76" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "77" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "78" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "79" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "80"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "81" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "82" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "83" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "84" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "85" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "86" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "87" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "88" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "89" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "90" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "91" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "92" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "93" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "94" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "95" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "96"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "97" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "98" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "99" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "100" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "101" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "102" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "103" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "104" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "105" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "106" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "107" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "108" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "109" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "110" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "111" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "112"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "113" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "114" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "115" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "116" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "117" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "118" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "119" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "120" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "121" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "122" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "123" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "124" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "125" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "126" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "127" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "128"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "129" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "130" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "131" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "132" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "133" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "134" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "135" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "136" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "137" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "138" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "139" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "140" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "141" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "142" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "143" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "144"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "145" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "146" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "147" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "148" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "149" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "150" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "151" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "152" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "153" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "154" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "155" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "156" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "157" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "158" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "159" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "160"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "161" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "162" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "163" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "164" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "165" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "166" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "167" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "168" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "169" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "170" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "171" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "172" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "173" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "174" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "175" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "176"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "177" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "178" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "179" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "180" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "181" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "182" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "183" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "184" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "185" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "186" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "187" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "188" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "189" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "190" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "191" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "192"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "193" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "194" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "195" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "196" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "197" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "198" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "199" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "200" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "201" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "202" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "203" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "204" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "205" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "206" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "207" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "208"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "209" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "210" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "211" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "212" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "213" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "214" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "215" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "216" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "217" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "218" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "219" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "220" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "221" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "222" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "223" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "224"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "225" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "226" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "227" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "228" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "229" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "230" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "231" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "232" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "233" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "234" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "235" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "236" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "237" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "238" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "239" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "240"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "241" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "242" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "243" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "244" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "245" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "246" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "247" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "248" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "249" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "250" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "251" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "252" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "253" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "254" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "255" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "256"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "257" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "258" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "259" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "260" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "261" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "262" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "263" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "264" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "265" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "266" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "267" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "268" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "269" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "270" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "271" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "272"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "273" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "274" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "275" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "276" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "277" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "278" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "279" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "280" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "281" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "282" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "283" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "284" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "285" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "286" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "287" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "288"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "289" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "290" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "291" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "292" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "293" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "294" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "295" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "296" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "297" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "298" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "299" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "300" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "301" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "302" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "303" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "304"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "305" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "306" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "307" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "308" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "309" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "310" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "311" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "312" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "313" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "314" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "315" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "316" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "317" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "318" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "319" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "320"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "321" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "322" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "323" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "324" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "325" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "326" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "327" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "328" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "329" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "330" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "331" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "332" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "333" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "334" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "335" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "336"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "337" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "338" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "339" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "340" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "341" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "342" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "343" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "344" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "345" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "346" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "347" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "348" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "349" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "350" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "351" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "352"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "353" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "354" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "355" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "356" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "357" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "358" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "359" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "360" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "361" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "362" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "363" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "364" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "365" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "366" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "367" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "368"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "369" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "370" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "371" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "372" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "373" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "374" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "375" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "376" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "377" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "378" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "379" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "380" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "381" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "382" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "383" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "384"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "385" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "386" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "387" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "388" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "389" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "390" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "391" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "392" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "393" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "394" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "395" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "396" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "397" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "398" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "399" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "400"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "401" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>

<!-- ================LOOP 1 ==================-->

<property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "402" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "403" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "404" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "405" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "406" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "407" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "408" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "409" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "410" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "411" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "412" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "413" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "414" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "415" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "416" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "417"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "418" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "419" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "420" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "421" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "422" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "423" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "424" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "425" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "426" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "427" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "428" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "429" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "430" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "431" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "432" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "433"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "434" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "435" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "436" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "437" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "438" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "439" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "440" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "441" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "442" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "443" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "444" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "445" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "446" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "447" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "448" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "449"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "450" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "451" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "452" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "453" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "454" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "455" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "456" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "457" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "458" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "459" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "460" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "461" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "462" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "463" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "464" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "465"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "466" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "467" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "468" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "469" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "470" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "471" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "472" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "473" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "474" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "475" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "476" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "477" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "478" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "479" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "480" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "481"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "482" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "483" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "484" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "485" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "486" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "487" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "488" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "489" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "490" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "491" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "492" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "493" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "494" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "495" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "496" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "497"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "498" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "499" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "500" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "501" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "502" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "503" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "504" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "505" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "506" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "507" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "508" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "509" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "510" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "511" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "512" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "513"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "514" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "515" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "516" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "517" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "518" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "519" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "520" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "521" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "522" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "523" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "524" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "525" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "526" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "527" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "528" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "529"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "530" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "531" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "532" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "533" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "534" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "535" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "536" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "537" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "538" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "539" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "540" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "541" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "542" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "543" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "544" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "545"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "546" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "547" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "548" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "549" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "550" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "551" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "552" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "553" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "554" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "555" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "556" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "557" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "558" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "559" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "560" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "561"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "562" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "563" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "564" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "565" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "566" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "567" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "568" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "569" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "570" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "571" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "572" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "573" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "574" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "575" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "576" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "577"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "578" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "579" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "580" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "581" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "582" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "583" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "584" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "585" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "586" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "587" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "588" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "589" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "590" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "591" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "592" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "593"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "594" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "595" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "596" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "597" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "598" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "599" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "600" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "601" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "602" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "603" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "604" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "605" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "606" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "607" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "608" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "609"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "610" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "611" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "612" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "613" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "614" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "615" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "616" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "617" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "618" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "619" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "620" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "621" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "622" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "623" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "624" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "625"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "626" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "627" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "628" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "629" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "630" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "631" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "632" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "633" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "634" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "635" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "636" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "637" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "638" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "639" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "640" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "641"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "642" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "643" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "644" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "645" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "646" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "647" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "648" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "649" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "650" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "651" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "652" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "653" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "654" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "655" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "656" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "657"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "658" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "659" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "660" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "661" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "662" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "663" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "664" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "665" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "666" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "667" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "668" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "669" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "670" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "671" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "672" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "673"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "674" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "675" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "676" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "677" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "678" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "679" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "680" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "681" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "682" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "683" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "684" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "685" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "686" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "687" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "688" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "689"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "690" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "691" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "692" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "693" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "694" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "695" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "696" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "697" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "698" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "699" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "700" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "701" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "702" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "703" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "704" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "705"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "706" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "707" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "708" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "709" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "710" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "711" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "712" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "713" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "714" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "715" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "716" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "717" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "718" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "719" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "720" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "721"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "722" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "723" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "724" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "725" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "726" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "727" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "728" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "729" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "730" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "731" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "732" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "733" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "734" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "735" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "736" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "737"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "738" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "739" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "740" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "741" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "742" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "743" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "744" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "745" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "746" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "747" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "748" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "749" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "750" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "751" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "752" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "753"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "754" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "755" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "756" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "757" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "758" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "759" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "760" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "761" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "762" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "763" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "764" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "765" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "766" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "767" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "768" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "769"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "770" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "771" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "772" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "773" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "774" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "775" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "776" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "777" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "778" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "779" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "780" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "781" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "782" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "783" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "784" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "785"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "786" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "787" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "788" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "789" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "790" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "791" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "792" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "793" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "794" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "795" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "796" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "797" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "798" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "799" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "800" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "801"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "802" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>

<!-- ================LOOP 2 ==================-->

<property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "803" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "804" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "805" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "806" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "807" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "808" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "809" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "810" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "811" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "812" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "813" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "814" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "815" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "816" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "817" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "818"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "819" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "820" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "821" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "822" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "823" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "824" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "825" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "826" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "827" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "828" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "829" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "830" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "831" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "832" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "833" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "834"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "835" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "836" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "837" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "838" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "839" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "840" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "841" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "842" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "843" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "844" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "845" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "846" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "847" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "848" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "849" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "850"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "851" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "852" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "853" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "854" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "855" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "856" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "857" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "858" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "859" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "860" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "861" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "862" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "863" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "864" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "865" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "866"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "867" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "868" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "869" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "870" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "871" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "872" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "873" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "874" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "875" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "876" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "877" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "878" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "879" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "880" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "881" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "882"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "883" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "884" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "885" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "886" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "887" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "888" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "889" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "890" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "891" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "892" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "893" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "894" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "895" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "896" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "897" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "898"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "899" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "900" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "901" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "902" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "903" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "904" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "905" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "906" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "907" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "908" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "909" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "910" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "911" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "912" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "913" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "914"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "915" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "916" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "917" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "918" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "919" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "920" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "921" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "922" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "923" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "924" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "925" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "926" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "927" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "928" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "929" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "930"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "931" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "932" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "933" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "934" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "935" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "936" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "937" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "938" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "939" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "940" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "941" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "942" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "943" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "944" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "945" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "946"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "947" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "948" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "949" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "950" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "951" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "952" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "953" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "954" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "955" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "956" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "957" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "958" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "959" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "960" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "961" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "962"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "963" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "964" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "965" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "966" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "967" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "968" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "969" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "970" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "971" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "972" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "973" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "974" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "975" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "976" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "977" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "978"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "979" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "980" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "981" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "982" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "983" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "984" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "985" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "986" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "987" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "988" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "989" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "990" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "991" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "992" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "993" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "994"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "995" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "996" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "997" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "998" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "999" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1000" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1001" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1002" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1003" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1004" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1005" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1006" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1007" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1008" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1009" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1010"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1011" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1012" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1013" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1014" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1015" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1016" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1017" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1018" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1019" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1020" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1021" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1022" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1023" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1024" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1025" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1026"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1027" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1028" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1029" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1030" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1031" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1032" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1033" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1034" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1035" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1036" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1037" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1038" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1039" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1040" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1041" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1042"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1043" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1044" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1045" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1046" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1047" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1048" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1049" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1050" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1051" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1052" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1053" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1054" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1055" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1056" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1057" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1058"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1059" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1060" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1061" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1062" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1063" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1064" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1065" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1066" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1067" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1068" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1069" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1070" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1071" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1072" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1073" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1074"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1075" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1076" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1077" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1078" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1079" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1080" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1081" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1082" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1083" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1084" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1085" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1086" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1087" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1088" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1089" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1090"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1091" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1092" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1093" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1094" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1095" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1096" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1097" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1098" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1099" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1100" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1101" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1102" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1103" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1104" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1105" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1106"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1107" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1108" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1109" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1110" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1111" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1112" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1113" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1114" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1115" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1116" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1117" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1118" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1119" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1120" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1121" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1122"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1123" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1124" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1125" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1126" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1127" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1128" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1129" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1130" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1131" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1132" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1133" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1134" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1135" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1136" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1137" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1138"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1139" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1140" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1141" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1142" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1143" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1144" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1145" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1146" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1147" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1148" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1149" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1150" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1151" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1152" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1153" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1154"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1155" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1156" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1157" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1158" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1159" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1160" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1161" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1162" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1163" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1164" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1165" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1166" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1167" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1168" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1169" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1170"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1171" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1172" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1173" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1174" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1175" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1176" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1177" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1178" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1179" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1180" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1181" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1182" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1183" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1184" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1185" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1186"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1187" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1188" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1189" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1190" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1191" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1192" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1193" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1194" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1195" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id = "1196" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1197" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1198" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1199" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1200" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1201" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id = "1202"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id = "1203" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>

</beginning>

<!-- 2017/03/14 18:13:34 Generated 1200 from 401 distinct rules in 3 loops -->