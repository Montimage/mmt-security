
<property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
           description="IPv4 address conflict detection (RFC5227). Possible arp poisoning.">
       <event value="COMPUTE" event_id="1" 
              description="An arp reply with MAC address"
              boolean_expression="((arp.ar_op == 2)&amp;&amp;(ethernet.src != ethernet.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="An arp reply but with different MAC address"
            boolean_expression="((arp.ar_op == 2)&amp;&amp;((arp.ar_sip == arp.ar_sip.1)&amp;&amp;((arp.ar_sha != arp.ar_sha.1)&amp;&amp;(ethernet.src != ethernet.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="4_Analyse_03b : SYN and ACK paquets with a 0xC123D delta between TCP sequence numbers (scan done by SYNFUL attack).">
     <event value="COMPUTE" event_id="1"
            description="TCP SYN"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst == ip.dst)&amp;&amp;((ip.src == ip.src)&amp;&amp;(tcp.seq_nb == tcp.seq_nb))))"/>
     <event value="COMPUTE" event_id="2" 
            description="TCP ACK"
            boolean_expression="((tcp.flags == 16)&amp;&amp;((ip.dst == ip.src.1)&amp;&amp;((ip.src == ip.dst.1)&amp;&amp;(((tcp.ack_nb - tcp.seq_nb.1) == 791101)||((tcp.seq_nb.1 - tcp.ack_nb) == 791101)))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="C4_Analyse_03g: The IP options field must be homogeneous in all IP fragments.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.options == ip.options)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP options"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.src == ip.src.1)&amp;&amp;((ip.dst == ip.dst.1)&amp;&amp;(#check_ip_options(ip.options,ip.options.1) == 1))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: The minimum size of an IP fragment is 28 bytes and for an IP fragment with offset 0 it is 40.">
     <event value="COMPUTE" event_id="1" 
            description="IP segment and paquet size"
            boolean_expression="((ip.mf_flag &gt; 0)&amp;&amp;((ip.tot_len &lt; 28)||((ip.frag_offset == 0)&amp;&amp;(ip.tot_len &lt; 40))))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_03h: IP packet size and eth payload size not coherent.">
     <event value="COMPUTE" event_id="1" 
            description="Paquet size"
            boolean_expression="((meta.packet_len &lt; 34)&amp;&amp;(ip.tot_len &gt; 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="IP segment"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3b : Data in SYN packet.">
       <event value="COMPUTE" event_id="1" 
              description="SYN request"
              boolean_expression="((tcp.flags == 2)&amp;&amp;(tcp.payload_len &gt; 0))"/>
       <event value="COMPUTE" event_id="2" 
              description="SYN ACK reply"
              boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="EVASION" 
     description="C4_Analyse_3f bis: Unauthorized port number.">
       <event value="COMPUTE" event_id="1" 
              description="TCP packet with non-authorized port number."
              boolean_expression="((#check_port(tcp.dest_port) == 1)||(#check_port(tcp.src_port) == 1))"/>
       <event value="COMPUTE" event_id="2" 
              description="TCP packet"
              boolean_expression="((ip.src != ip.dst)&amp;&amp;((tcp.dest_port + tcp.src_port) != 0))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="Two successive TCP SYN requests but with different destination addresses.">
     <event value="COMPUTE" event_id="1" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;(ip.src != ip.dst))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((ip.dst != ip.dst.1)&amp;&amp;(ip.src == ip.src.1)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0" delay_max="10" property_id="" type_property="ATTACK" 
     description="Invalid GRE version detected">
    <event value="COMPUTE" event_id="1" 
            description="Context: Gre protocol"
            boolean_expression="((gre.proto &gt; 0)&amp;&amp;(gre.version != 0))"/>
     <event value="COMPUTE" event_id="2" 
            description="Trigger: Invalid GRE version"
            boolean_expression="(ip.src != ip.dst)"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : fragments with offset always = 0 (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment with offset = 0 followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset = 0"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset == 0)&amp;&amp;(ip.src != ip.dst)))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Out of order IP fragmentation : a fragment with a size less than 9 bytes (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and an offset less than 9 bytes"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; 9)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &gt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset - ip.frag_offset.1) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="EVASION" 
     description="Overlapping unordered IP fragmentation : difference in offset of concomitant fragments less than fragment length (allowed but could be an evasion).">
       <event value="COMPUTE" event_id="1" 
              description="IP fragment followed by another"
              boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.frag_offset &gt;= 0)&amp;&amp;(ip.src != ip.dst))))"/>
       <event value="COMPUTE" event_id="2" 
              description="IP fragment with same identification and diffenrences in offsets less than length"
              boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.frag_offset &lt; ip.frag_offset.1)&amp;&amp;(((ip.frag_offset.1 - ip.frag_offset) &lt; ip.tot_len)&amp;&amp;(ip.src != ip.dst))))"/>
 </property>
 <property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="" type_property="ATTACK"
          description="XMAS scan : TCP with all flags FIN, URG, PSH active.">
     <event value="COMPUTE" event_id="1"
          description="TCP packet with flag FIN active"
          boolean_expression="(tcp.urg == 1)"/>
     <event value="COMPUTE" event_id="2"
          description="TCP packet with flags URG and PSH active"
          boolean_expression="((tcp.fin == 1)&amp;&amp;(tcp.psh == 1))"/>
 </property>
 <property value="THEN" delay_units="ms" delay_min="0+" delay_max="10" property_id="" type_property="ATTACK" 
     description="TCP SYN requests on microsoft-ds port 445 with SYN ACK.">
     <event value="COMPUTE" event_id="1"
            description="SYN request"
            boolean_expression="((tcp.flags == 2)&amp;&amp;((tcp.dest_port == 445)&amp;&amp;(ip.src != ip.dst)))"/>
     <event value="COMPUTE" event_id="2" 
            description="SYN ACK reply"
            boolean_expression="((tcp.flags == 18)&amp;&amp;(ip.src == ip.dst.1))"/>
 </property>